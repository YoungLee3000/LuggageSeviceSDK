apply plugin: 'com.android.library'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
//        applicationId "com.nlscan.android.luggagelib"
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }


    /** 打包成jar **/
    task makeJar(type: Copy) {
        //删除存在的
        delete 'build/libs/LuggageSdk.jar'
        //设置要拷贝文件的路径；[如果没有bundles文件夹，则将bundles替换成packaged-classes]

        from('build/intermediates/aar_main_jar/debug/')
        //设置存放jar的文件目录
        into('build/libs/')




        //include ,exclude参数来设置过滤
        //将classes.jar放入build/libs/目录下（我们只关心classes.jar这个文件）
        include('classes.jar')
        //重命名
        rename('classes.jar', 'LuggageSdk.jar')
    }
    makeJar.dependsOn(build)




}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.1'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}
